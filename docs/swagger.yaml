definitions:
  models.Autores:
    properties:
      Data_nascimento:
        type: string
      ID_autor:
        type: integer
      Nacionalidade:
        type: string
      Nome:
        type: string
    type: object
  models.Categorias:
    properties:
      Descricao:
        type: string
      ID_categoria:
        type: integer
    type: object
  models.Livros:
    properties:
      Ano_publicacao:
        type: integer
      ID_autor:
        type: integer
      ID_categoria:
        type: integer
      ID_livro:
        type: integer
      Isbn:
        type: string
      Titulo:
        type: string
    type: object
  models.Usuarios:
    properties:
      Data_registro:
        type: string
      Email:
        type: string
      IS_usuario:
        type: integer
      Nome:
        type: string
      Telefone:
        type: string
    type: object
info:
  contact: {}
paths:
  /autores:
    get:
      consumes:
      - application/json
      description: Obtém uma lista de todos os autores
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Autores'
            type: array
      summary: Retrieve all authors
      tags:
      - Autores
  /autores/{id}:
    get:
      consumes:
      - application/json
      description: Obtém um autor de acordo com o ID
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Autores'
      summary: Retrieve author by ID
      tags:
      - Autores
  /categorias:
    get:
      description: Obtém uma lista de todas as categorias
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Categorias'
            type: array
      summary: Retrieve all categories
      tags:
      - Categorias
    post:
      consumes:
      - application/json
      description: Adiciona uma nova categoria
      parameters:
      - description: Category object
        in: body
        name: categoria
        required: true
        schema:
          $ref: '#/definitions/models.Categorias'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Categorias'
      summary: Add a new category
      tags:
      - Categorias
  /categorias/{id}:
    get:
      consumes:
      - application/json
      description: Obtém uma categoria de acordo com o ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Categorias'
      summary: Retrieve category by ID
      tags:
      - Categorias
  /livros:
    get:
      consumes:
      - application/json
      description: Obtém uma lista de todos os livros
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Livros'
            type: array
      summary: Retrieve all books
      tags:
      - Livros
  /livros/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Livros'
      summary: Retrieve book by ID
      tags:
      - Livros
  /usuarios:
    get:
      consumes:
      - application/json
      description: Obtém uma lista de todos os usuários
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Usuarios'
            type: array
      summary: Retrieve all users
      tags:
      - Usuários
  /usuarios/{id}:
    get:
      consumes:
      - application/json
      description: Obtém um usuário de acordo com o ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Usuarios'
      summary: Retrieve user by ID
      tags:
      - Usuários
swagger: "2.0"
